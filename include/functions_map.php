<?php
/***********************************************
* File      :   functions_map.php
* Project   :   piwigo-openstreetmap
* Descr     :   Read Geotag Metdata
* Base on   :   RV Maps & Earth plugin
*
* Created   :   30.05.2013
*
* Copyright 2013-2014 <xbgmsharp@gmail.com>
*
* This program is free software: you can redistribute it and/or modify
* it under the terms of the GNU General Public License as published by
* the Free Software Foundation, either version 3 of the License, or
* (at your option) any later version.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU General Public License for more details.
*
* You should have received a copy of the GNU General Public License
* along with this program.  If not, see <http://www.gnu.org/licenses/>.
*
************************************************/


function osm_get_items($page)
{
    // Limit search by category, by tag, by smartalbum
    $LIMIT_SEARCH="";
    if (isset($page['section']))
    {
        if ($page['section']='categories' and isset($page['category']) and isset($page['category']['id']) )
        {
            $LIMIT_SEARCH = "`storage_category_id` = ".$page['category']['id']." AND ";
        }
        if ($page['section']='tags' and isset($page['tags']) and isset($page['tags'][0]['id']) )
        {
            $items = get_image_ids_for_tags( array($page['tags'][0]['id']) );
            if ( !empty($items) )
            {
                $LIMIT_SEARCH = "image_id IN (".implode(',', $items).") AND ";
            }
        }
        if ($page['section']='tags' and isset($page['category']) and isset($page['category']['id']) )
        {
            $LIMIT_SEARCH = "category_id=".$page['category']['id']." AND ";
        }
    }

    $forbidden = get_sql_condition_FandF(
        array
        (
            'forbidden_categories' => 'category_id',
            'visible_categories' => 'category_id',
            'visible_images' => 'id'
        ),
        "\n AND"
    );

    /* We have lat and lng coordonate for virtual album */
    if (isset($_GET['min_lat']) and isset($_GET['max_lat']) and isset($_GET['min_lng']) and isset($_GET['max_lng']))
    {
        $LIMIT_SEARCH="";

        /* Delete all previous album */
        $query="SELECT `id` FROM ".CATEGORIES_TABLE." WHERE `name` = 'Locations' AND `comment` LIKE '%OSM plugin%';";
        $ids = array_from_query($query, 'id');
        /* Unlink items for the previous album */
        delete_categories($ids, $photo_deletion_mode='no_delete');

        /* Create an album */
        $options = array(
            'comment'=> 'Generated by OSM plugin',
        );
        $osm_album = create_virtual_category('Locations', NULL, $options);

        /* Create a sub album */
        $options = array(
            'comment'=> "OSM virtual album\nlat:".$_GET['min_lat']." ".$_GET['max_lat']."\nlng:".$_GET['min_lng']." ".$_GET['max_lng'],
        );
        $osm_sub_album = create_virtual_category("OSM".$_GET['min_lat']."", $osm_album['id'], $options);

        /* Get all items inside the lat and lng */
        $query="SELECT  `id`, `latitude`, `longitude` 
    FROM ".IMAGES_TABLE." AS i
        INNER JOIN ".IMAGE_CATEGORY_TABLE." AS ic ON id = ic.image_id
    WHERE ".$LIMIT_SEARCH." `latitude` IS NOT NULL AND `longitude` IS NOT NULL 
    AND `latitude` > ".$_GET['min_lat']." AND `latitude` < ".$_GET['max_lat']."
    AND `longitude` > ".$_GET['min_lng']." AND `longitude` < ".$_GET['max_lng']."
    ".$forbidden." GROUP BY id;";

        $items = hash_from_query( $query, 'id');

        /* Add  items to the new sub album */
        foreach ($items as $item)
        {
            $query="INSERT INTO ".IMAGE_CATEGORY_TABLE." ( `image_id` ,`category_id` ,`rank` ) VALUES ( '".$item['id']."', '".$osm_sub_album['id']."', NULL );";
            pwg_query($query);
        }

        /* Redirect to the new album */
        header('Location: '.get_absolute_root_url().'index.php?/category/'.$osm_sub_album['id']);
        exit;
    }

    // Fetch data with latitude and longitude
    //$query="SELECT `latitude`, `longitude`, `name`, `path` FROM ".IMAGES_TABLE." WHERE `latitude` IS NOT NULL AND `longitude` IS NOT NULL;";
    // SUBSTRING_INDEX(TRIM(LEADING '.' FROM `path`), '.', 1) full path without filename extension
    // SUBSTRING_INDEX(TRIM(LEADING '.' FROM `path`), '.', -1) full path with only filename extension

    $query="SELECT `latitude`, `longitude`, 
    IFNULL(`name`, '') AS `name`, 
    IF(`representative_ext` IS NULL, 
        CONCAT(SUBSTRING_INDEX(TRIM(LEADING '.' FROM `path`), '.', 1 ), '-sq.', SUBSTRING_INDEX(TRIM(LEADING '.' FROM `path`), '.', -1 )), 
        TRIM(LEADING '.' FROM
            REPLACE(`path`, `file`,
                    CONCAT('pwg_representative/',
                        CONCAT(
                            TRIM(TRAILING '.' FROM SUBSTRING_INDEX(`file`, '.', 1 )),
                            CONCAT('-sq.', `representative_ext`)
                        )
                    )
                )
            )
    ) AS `pathurl`, 
    TRIM(TRAILING '/' FROM CONCAT( `id`, '/category/', IFNULL(`storage_category_id`, '') ) ) as `imgurl`, 
    IFNULL(`comment`, '') AS `comment`,
    IFNULL(`author`, '') AS `author`,
    `width`
        FROM ".IMAGES_TABLE." AS i
            INNER JOIN ".IMAGE_CATEGORY_TABLE." AS ic ON id = ic.image_id
            WHERE ".$LIMIT_SEARCH." `latitude` IS NOT NULL AND `longitude` IS NOT NULL ".$forbidden." GROUP BY id;";
    //echo $query;
    $php_data = array_from_query($query);
    //print_r($php_data);
    $js_data = array();
    foreach($php_data as $array)
    {
        // MySQL did all the job
        //print_r($array);
        $js_data[] = array((double)$array['latitude'],
                   (double)$array['longitude'],
                   $array['name'],
                   get_absolute_root_url() ."i.php?".$array['pathurl'],
                   get_absolute_root_url() ."picture.php?/".$array['imgurl'],
                   $array['comment'],
                   $array['author'],
                   (int)$array['width']
                   );
    }
    return $js_data;
}
function osm_parse_map_data_url($tokens, &$next_token)
{
    $page = parse_section_url($tokens, $next_token);
    if ( !isset($page['section']) )
      $page['section'] = 'categories';
  
    $page = array_merge( $page, parse_well_known_params_url( $tokens, $next_token) );
    $page['start']=0;
    $page['box'] = osm_bounds_from_url( @$_GET['box'] );
    return $page;
}

function osm_bounds_from_url($str)
{
  if ( !isset($str) or strlen($str)==0 )
    return null;
  $r = explode(',', $str );
  if ( count($r) != 4)
    bad_request( $str.' is not a valid geographical bound' );
  $b = array(
    's' => $r[0],
    'w' => $r[1],
    'n' => $r[2],
    'e' => $r[3],
  );
  return $b;
}

?>
